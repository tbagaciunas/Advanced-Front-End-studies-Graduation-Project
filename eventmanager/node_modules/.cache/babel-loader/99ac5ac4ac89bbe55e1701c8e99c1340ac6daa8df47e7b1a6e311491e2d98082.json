{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\OneDrive\\\\Desktop\\\\egzaminas\\\\eventmanager\\\\src\\\\components\\\\List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport UpdateButton from \"./UpdateButton\";\nimport DeleteButton from \"./DeleteButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  users,\n  updateUser,\n  fetchUsers\n}) => {\n  _s();\n  useEffect(() => {\n    fetchUsers(); // Fetch users\n  }, [fetchUsers]);\n  const deleteUser = async userId => {\n    try {\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"DELETE\"\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to delete user:\", error);\n    }\n  };\n  const updateUserById = async (userId, updatedData) => {\n    try {\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedData)\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to update user:\", error);\n    }\n  };\n  const formatDate = birthdate => {\n    const date = new Date(birthdate);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"user-list\",\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"user-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-column\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-column\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-column\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Birthdate: \", formatDate(user.birthdate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UpdateButton, {\n        user: user,\n        updateUser: data => updateUserById(user._id, data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        user: user,\n        deleteUser: () => deleteUser(user._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","UpdateButton","DeleteButton","jsxDEV","_jsxDEV","List","users","updateUser","fetchUsers","_s","deleteUser","userId","fetch","method","error","console","updateUserById","updatedData","headers","body","JSON","stringify","formatDate","birthdate","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","className","children","map","user","name","fileName","_jsxFileName","lineNumber","columnNumber","email","data","_id","_c","$RefreshReg$"],"sources":["C:/Users/tomas/OneDrive/Desktop/egzaminas/eventmanager/src/components/List.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport UpdateButton from \"./UpdateButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\nconst List = ({ users, updateUser, fetchUsers }) => {\r\n  useEffect(() => {\r\n    fetchUsers(); // Fetch users\r\n  }, [fetchUsers]);\r\n\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete user:\", error);\r\n    }\r\n  };\r\n\r\n  const updateUserById = async (userId, updatedData) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to update user:\", error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (birthdate) => {\r\n    const date = new Date(birthdate);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  return (\r\n    <ul className=\"user-list\">\r\n      {users.map((user) => (\r\n        <li key={user._id} className=\"user-item\">\r\n          <div className=\"user-column\">\r\n            <p>Name: {user.name}</p>\r\n          </div>\r\n          <div className=\"user-column\">\r\n            <p>Email: {user.email}</p>\r\n          </div>\r\n          <div className=\"user-column\">\r\n            <p>Birthdate: {formatDate(user.birthdate)}</p>\r\n          </div>\r\n\r\n          <UpdateButton\r\n            user={user}\r\n            updateUser={(data) => updateUserById(user._id, data)}\r\n          />\r\n          <DeleteButton user={user} deleteUser={() => deleteUser(user._id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}