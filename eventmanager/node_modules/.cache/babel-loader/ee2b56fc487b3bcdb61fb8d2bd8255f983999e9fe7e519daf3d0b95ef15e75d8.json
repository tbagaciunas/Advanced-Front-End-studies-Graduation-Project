{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\OneDrive\\\\Desktop\\\\egzaminas\\\\eventmanager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../src/App.css\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n\n  // Function to add a new user to the list\n  const addUser = user => {\n    setUsers([...users, user]);\n  };\n  const fetchUsers = async () => {\n    // Implement the fetching logic here (similar to how it is done in the List component)\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users: Server returned an error\");\n      }\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addUser: addUser,\n      fetchUsers: fetchUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      users: users,\n      fetchUsers: fetchUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gAXO2JN5F09+lSQAgkU4yvYNIT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","List","jsxDEV","_jsxDEV","App","_s","users","setUsers","addUser","user","fetchUsers","response","fetch","method","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tomas/OneDrive/Desktop/egzaminas/eventmanager/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../src/App.css\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n\n  // Function to add a new user to the list\n  const addUser = (user) => {\n    setUsers([...users, user]);\n  };\n\n  const fetchUsers = async () => {\n    // Implement the fetching logic here (similar to how it is done in the List component)\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        method: \"GET\",\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users: Server returned an error\");\n      }\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Event Manager</h1>\n      <Form addUser={addUser} fetchUsers={fetchUsers} />\n\n      <h2>User List</h2>\n      <List users={users} fetchUsers={fetchUsers} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,IAAI,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;MACpE;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCV,QAAQ,CAACS,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA,CAACH,IAAI;MAACQ,OAAO,EAAEA,OAAQ;MAACE,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElDtB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA,CAACF,IAAI;MAACK,KAAK,EAAEA,KAAM;MAACI,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}