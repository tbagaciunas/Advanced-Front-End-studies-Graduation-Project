{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\OneDrive\\\\Desktop\\\\egzaminas\\\\eventmanager\\\\src\\\\components\\\\List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UpdateButton from \"./UpdateButton\";\nimport DeleteButton from \"./DeleteButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  updateUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users: Server returned an error\");\n      }\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  };\n  const deleteUser = async userId => {\n    try {\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"DELETE\"\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to delete user:\", error);\n    }\n  };\n  const updateUserById = async (userId, updatedData) => {\n    try {\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedData)\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to update user:\", error);\n    }\n  };\n  const formatDate = birthdate => {\n    const date = new Date(birthdate);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Birthdate: \", formatDate(user.birthdate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UpdateButton, {\n        user: user,\n        updateUser: data => updateUserById(user._id, data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        user: user,\n        deleteUser: () => deleteUser(user._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","UpdateButton","DeleteButton","jsxDEV","_jsxDEV","List","updateUser","_s","users","setUsers","fetchUsers","response","fetch","method","ok","Error","data","json","error","console","deleteUser","userId","updateUserById","updatedData","headers","body","JSON","stringify","formatDate","birthdate","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","children","map","user","name","fileName","_jsxFileName","lineNumber","columnNumber","email","_id","_c","$RefreshReg$"],"sources":["C:/Users/tomas/OneDrive/Desktop/egzaminas/eventmanager/src/components/List.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UpdateButton from \"./UpdateButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\nconst List = ({ updateUser }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users\", {\r\n        method: \"GET\",\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch users: Server returned an error\");\r\n      }\r\n      const data = await response.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch users:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete user:\", error);\r\n    }\r\n  };\r\n\r\n  const updateUserById = async (userId, updatedData) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to update user:\", error);\r\n    }\r\n  };\r\n  const formatDate = (birthdate) => {\r\n    const date = new Date(birthdate);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n  return (\r\n    <ul>\r\n      {users.map((user) => (\r\n        <li key={user._id}>\r\n          <p>Name: {user.name}</p>\r\n          <p>Email: {user.email}</p>\r\n          <p>Birthdate: {formatDate(user.birthdate)}</p>\r\n\r\n          <UpdateButton\r\n            user={user}\r\n            updateUser={(data) => updateUserById(user._id, data)}\r\n          />\r\n          <DeleteButton user={user} deleteUser={() => deleteUser(user._id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default List;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}