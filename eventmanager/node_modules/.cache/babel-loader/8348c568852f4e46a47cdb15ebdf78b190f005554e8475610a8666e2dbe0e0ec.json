{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomas\\\\OneDrive\\\\Desktop\\\\egzaminas\\\\eventmanager\\\\src\\\\components\\\\List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UpdateButton from \"./UpdateButton\";\nimport DeleteButton from \"./DeleteButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  updateUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users: Server returned an error\");\n      }\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"Failed to fetch users:\", error);\n    }\n  };\n  const deleteUser = async userId => {\n    try {\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"DELETE\"\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to delete user:\", error);\n    }\n  };\n  const updateUserById = async (userId, updatedData) => {\n    try {\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedData)\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to update user:\", error);\n    }\n  };\n  const addUser = async newUser => {\n    try {\n      await fetch(\"http://localhost:5000/api/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newUser)\n      });\n      fetchUsers();\n    } catch (error) {\n      console.error(\"Failed to add user:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Birthdate: \", user.birthdate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UpdateButton, {\n        user: user,\n        updateUser: data => updateUserById(user._id, data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        user: user,\n        deleteUser: () => deleteUser(user._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","UpdateButton","DeleteButton","jsxDEV","_jsxDEV","List","updateUser","_s","users","setUsers","fetchUsers","response","fetch","method","ok","Error","data","json","error","console","deleteUser","userId","updateUserById","updatedData","headers","body","JSON","stringify","addUser","newUser","children","map","user","name","fileName","_jsxFileName","lineNumber","columnNumber","email","birthdate","_id","_c","$RefreshReg$"],"sources":["C:/Users/tomas/OneDrive/Desktop/egzaminas/eventmanager/src/components/List.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UpdateButton from \"./UpdateButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\nconst List = ({ updateUser }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users\", {\r\n        method: \"GET\",\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch users: Server returned an error\");\r\n      }\r\n      const data = await response.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch users:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete user:\", error);\r\n    }\r\n  };\r\n\r\n  const updateUserById = async (userId, updatedData) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to update user:\", error);\r\n    }\r\n  };\r\n\r\n  const addUser = async (newUser) => {\r\n    try {\r\n      await fetch(\"http://localhost:5000/api/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newUser),\r\n      });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Failed to add user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {users.map((user) => (\r\n        <li key={user._id}>\r\n          {/* Display user information */}\r\n          <p>Name: {user.name}</p>\r\n          <p>Email: {user.email}</p>\r\n          <p>Birthdate: {user.birthdate}</p>\r\n          {/* Use the correct component name */}\r\n          <UpdateButton\r\n            user={user}\r\n            updateUser={(data) => updateUserById(user._id, data)}\r\n          />\r\n          <DeleteButton user={user} deleteUser={() => deleteUser(user._id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;MACpE;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,QAAQ,CAACO,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAMT,KAAK,CAAE,mCAAkCS,MAAO,EAAC,EAAE;QACvDR,MAAM,EAAE;MACV,CAAC,CAAC;MACFH,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMI,cAAc,GAAG,MAAAA,CAAOD,MAAM,EAAEE,WAAW,KAAK;IACpD,IAAI;MACF,MAAMX,KAAK,CAAE,mCAAkCS,MAAO,EAAC,EAAE;QACvDR,MAAM,EAAE,KAAK;QACbW,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;MAClC,CAAC,CAAC;MACFb,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMU,OAAO,GAAG,MAAOC,OAAO,IAAK;IACjC,IAAI;MACF,MAAMjB,KAAK,CAAC,iCAAiC,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdW,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,OAAO;MAC9B,CAAC,CAAC;MACFnB,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEd,OAAA;IAAA0B,QAAA,EACGtB,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACd5B,OAAA;MAAA0B,QAAA,gBAEE1B,OAAA;QAAA0B,QAAA,GAAG,QAAM,EAACE,IAAI,CAACC,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBjC,OAAA;QAAA0B,QAAA,GAAG,SAAO,EAACE,IAAI,CAACM,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BjC,OAAA;QAAA0B,QAAA,GAAG,aAAW,EAACE,IAAI,CAACO,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElCjC,OAAA,CAACH,YAAY;QACX+B,IAAI,EAAEA,IAAK;QACX1B,UAAU,EAAGU,IAAI,IAAKM,cAAc,CAACU,IAAI,CAACQ,GAAG,EAAExB,IAAI;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACFjC,OAAA,CAACF,YAAY;QAAC8B,IAAI,EAAEA,IAAK;QAACZ,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACY,IAAI,CAACQ,GAAG;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAV7DL,IAAI,CAACQ,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAAC9B,EAAA,CAjFIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAmFV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}